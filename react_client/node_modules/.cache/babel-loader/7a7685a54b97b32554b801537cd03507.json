{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SEARCH_ARTISTS, SEARCH_ALBUMS, ARTISTS_ERROR, ALBUMS_ERROR, LOAD_ARTISTS, LOAD_ALBUMS, REFRESH_STATE } from '../actions/types'; // Initial state\n\nconst artistsState = {\n  artists_list: [],\n  error: null,\n  loading: false\n}; // Initial state\n\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: false\n};\n/**\n * \n * @param {*} state \n * @param {*} action \n */\n\nconst artists = (state = artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return { ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case LOAD_ARTISTS:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (state = albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return { ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n\n    case LOAD_ALBUMS:\n      return { ...state,\n        loading_albums: true\n      };\n\n    case ALBUMS_ERROR:\n      return { ...state,\n        loading_albums: false,\n        albums_error: action.payload\n      };\n\n    case REFRESH_STATE:\n      return { ...state,\n        loading_albums: false,\n        albums: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  artists,\n  albums\n});","map":{"version":3,"sources":["/home/sphe/mern_deezer_api_mongoose/client/src/reducers/reducers.js"],"names":["combineReducers","SEARCH_ARTISTS","SEARCH_ALBUMS","ARTISTS_ERROR","ALBUMS_ERROR","LOAD_ARTISTS","LOAD_ALBUMS","REFRESH_STATE","artistsState","artists_list","error","loading","albumsState","albums","albulms_error","loading_albums","artists","state","action","type","payload","albums_error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,aAPF,QAQO,kBARP,C,CAUA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAOA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,aAAa,EAAE,IAFG;AAGlBC,EAAAA,cAAc,EAAE;AAHE,CAApB;AAMA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,cAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLF,QAAAA,YAAY,EAAES,MAAM,CAACE;AAHhB,OAAP;;AAMF,SAAKjB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAHT,OAAP;;AAKF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELN,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOM,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,MAAMJ,MAAM,GAAG,CAACI,KAAK,GAAGL,WAAT,EAAsBM,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,aAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,cAAc,EAAE,KAFX;AAGLF,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAHV,OAAP;;AAKF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAIF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,cAAc,EAAE,KAFX;AAGLM,QAAAA,YAAY,EAAEH,MAAM,CAACE;AAHhB,OAAP;;AAKF,SAAKb,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,cAAc,EAAE,KAFX;AAGLF,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAMF;AACE,aAAOI,KAAP;AA1BJ;AA4BD,CA7BD;;AAgCA,eAAejB,eAAe,CAAC;AAC7BgB,EAAAA,OAD6B;AAE7BH,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport {\n  SEARCH_ARTISTS,\n  SEARCH_ALBUMS,\n  ARTISTS_ERROR,\n  ALBUMS_ERROR,\n  LOAD_ARTISTS,\n  LOAD_ALBUMS,\n  REFRESH_STATE\n} from '../actions/types';\n\n// Initial state\nconst artistsState = {\n  artists_list: [],\n  error: null,\n  loading: false\n};\n\n\n// Initial state\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: false\n};\n\n/**\n * \n * @param {*} state \n * @param {*} action \n */\n\nconst artists = (state = artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return {\n        ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case LOAD_ARTISTS:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (state = albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return {\n        ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n    case LOAD_ALBUMS:\n      return {\n        ...state,\n        loading_albums: true,\n      };\n    case ALBUMS_ERROR:\n      return {\n        ...state,\n        loading_albums: false,\n        albums_error: action.payload\n      };\n    case REFRESH_STATE:\n      return {\n        ...state,\n        loading_albums: false,\n        albums: []\n      };\n\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  artists,\n  albums\n});\n\n\n"]},"metadata":{},"sourceType":"module"}