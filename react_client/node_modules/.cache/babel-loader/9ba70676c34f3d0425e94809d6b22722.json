{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SEARCH_ARTISTS, SEARCH_ALBUMS, ARTISTS_ERROR, ALBUMS_ERROR, LOAD_ARTISTS, LOAD_ALBUMS //LOADING_ARTISTS,\n//LOADING_ALBUMS\n} from '../actions/types'; // Initial state\n\nconst artistsState = {\n  artists: [],\n  error: null,\n  loading: false\n}; // Initial state\n\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: false\n};\n/**\n * \n * @param {*} state \n * @param {*} action \n */\n\nconst artists = (state = artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return { ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case LOAD_ARTISTS:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (state = albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return { ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n\n    case LOAD_ALBUMS:\n      return { ...state,\n        loading_albums: true\n      };\n\n    case ALBUMS_ERROR:\n      return { ...state,\n        loading_albums: false,\n        albums_error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  artists,\n  albums\n});","map":{"version":3,"sources":["/home/sphe/mern_deezer_api_mongoose/client/src/reducers/reducers.js"],"names":["combineReducers","SEARCH_ARTISTS","SEARCH_ALBUMS","ARTISTS_ERROR","ALBUMS_ERROR","LOAD_ARTISTS","LOAD_ALBUMS","artistsState","artists","error","loading","albumsState","albums","albulms_error","loading_albums","state","action","type","artists_list","payload","albums_error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,WANF,CAOE;AACA;AARF,OAUO,kBAVP,C,CAYA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAOA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,aAAa,EAAE,IAFG;AAGlBC,EAAAA,cAAc,EAAE;AAHE,CAApB;AAMA;AACA;AACA;AACA;AACA;;AAEA,MAAMN,OAAO,GAAG,CAACO,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,OAAO,EAAE,KAFJ;AAGLQ,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAHhB,OAAP;;AAMF,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAEO,MAAM,CAACG;AAHT,OAAP;;AAKF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOK,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,MAAMH,MAAM,GAAG,CAACG,KAAK,GAAGJ,WAAT,EAAsBK,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,aAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELD,QAAAA,cAAc,EAAE,KAFX;AAGLF,QAAAA,MAAM,EAAEI,MAAM,CAACG;AAHV,OAAP;;AAKF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAIF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELD,QAAAA,cAAc,EAAE,KAFX;AAGLM,QAAAA,YAAY,EAAEJ,MAAM,CAACG;AAHhB,OAAP;;AAMF;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CAvBD;;AA0BA,eAAef,eAAe,CAAC;AAC7BQ,EAAAA,OAD6B;AAE7BI,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport {\n  SEARCH_ARTISTS,\n  SEARCH_ALBUMS,\n  ARTISTS_ERROR,\n  ALBUMS_ERROR,\n  LOAD_ARTISTS,\n  LOAD_ALBUMS,\n  //LOADING_ARTISTS,\n  //LOADING_ALBUMS\n\n} from '../actions/types';\n\n// Initial state\nconst artistsState = {\n  artists: [],\n  error: null,\n  loading: false\n};\n\n\n// Initial state\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: false\n};\n\n/**\n * \n * @param {*} state \n * @param {*} action \n */\n\nconst artists = (state = artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return {\n        ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case LOAD_ARTISTS:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (state = albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return {\n        ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n    case LOAD_ALBUMS:\n      return {\n        ...state,\n        loading_albums: true,\n      };\n    case ALBUMS_ERROR:\n      return {\n        ...state,\n        loading_albums: false,\n        albums_error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  artists,\n  albums\n});\n\n\n"]},"metadata":{},"sourceType":"module"}