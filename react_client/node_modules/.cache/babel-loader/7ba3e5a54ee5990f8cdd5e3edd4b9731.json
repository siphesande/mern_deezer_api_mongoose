{"ast":null,"code":"var _jsxFileName = \"/home/sphe/mern_deezer_api_mongoose/client/src/components/Albums.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { searchAlbums } from '../actions/actions';\nimport Loading from './Loading';\nimport NothingToShow from './NothingToShow';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Albums = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [term] = useState(props.artist_name);\n  let albums_results = useSelector(state => state.albums.albums);\n  let loading = useSelector(state => state.albums.loading_albums);\n  let albums_error = useSelector(state => state.albums.albums_error);\n  useEffect(() => {\n    addSearchTerm();\n  }, []); // searching for albums of the artist\n\n  const addSearchTerm = event => {\n    event.preventDefault();\n    dispatch(searchAlbums({\n      term\n    }));\n  };\n\n  if (albums_error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      color: \"primary\",\n      children: \"Error! Failed to seach or load\\xA0albums!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: albums_results.length === 0 || !albums_results ? /*#__PURE__*/_jsxDEV(NothingToShow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: albums_results.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list_item_container\",\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            alignItems: \"center\",\n            divider: true,\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.cover_small,\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Number of tacks: ${item.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Fans: ${item.nb_fan}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Albums, \"ZCbPd2FraXXPgEew4wVfGW/iBvM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Albums;\nexport default Albums;\n\nvar _c;\n\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"sources":["/home/sphe/mern_deezer_api_mongoose/client/src/components/Albums.tsx"],"names":["React","useState","useSelector","useDispatch","searchAlbums","Loading","NothingToShow","Typography","List","ListItem","ListItemText","useStyles","Albums","props","classes","dispatch","term","artist_name","albums_results","state","albums","loading","loading_albums","albums_error","useEffect","addSearchTerm","event","preventDefault","length","root","map","item","key","listItem","cover_small","title","nb_fan","id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {searchAlbums} from '../actions/actions';\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport Loading from './Loading';\nimport NothingToShow from './NothingToShow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport useStyles from \"./styles\";\n\n\n\nconst Albums:React.FC = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const [term] = useState(props.artist_name)\n  let albums_results = useSelector(state => state.albums.albums);\n  let loading = useSelector(state => state.albums.loading_albums);\n  let albums_error = useSelector(state => state.albums.albums_error);\n\n\n  useEffect(() => {\n    addSearchTerm()\n  }, []);\n\n// searching for albums of the artist\n  const addSearchTerm = (event) => {\n    event.preventDefault()\n    dispatch(searchAlbums({\n      term\n    }))\n  }\n\n  \n\n  if (albums_error) {\n    return <Typography variant=\"h1\" color=\"primary\">Error! Failed to seach or loadÂ albums!</Typography>\n  }\n \n  return (\n    <div>\n      {loading ? (\n        <Loading />\n      ) : (\n          <div>\n\n            { albums_results.length === 0 || !albums_results ?\n              <NothingToShow />\n              :\n              <List className={classes.root}>\n                {\n                  albums_results.map((item, key) => (\n                    <div className=\"list_item_container\">\n\n                    <ListItem\n                      className={classes.listItem}\n                      key={item.id}\n                      alignItems=\"center\"\n                      divider\n                      button\n                    >\n\n                      <img src={item.cover_small} alt=\"img\" />\n                      <ListItemText primary={`Number of tacks: ${item.title}`} />\n                      <ListItemText primary={`Fans: ${item.nb_fan}`} />\n                    </ListItem>\n                    </div>\n                  ))\n                }\n              </List>\n            }\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default Albums;"]},"metadata":{},"sourceType":"module"}