{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SEARCH_ARTISTS, SEARCH_ALBUMS, ARTISTS_ERROR, ALBUMS_ERROR //LOADING_ARTISTS,\n//LOADING_ALBUMS\n} from '../actions/types'; // Initial state\n\nconst artistsState = {\n  artists: [],\n  error: null,\n  loading: true\n}; // Initial state\n\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: true\n};\n\nconst artists = (artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return { ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return { ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n\n    case ALBUMS_ERROR:\n      return { ...state,\n        albums_error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  artists,\n  albums\n});","map":{"version":3,"sources":["/home/sphe/mern_deezer_api_mongoose/client/src/reducers/reducers.js"],"names":["combineReducers","SEARCH_ARTISTS","SEARCH_ALBUMS","ARTISTS_ERROR","ALBUMS_ERROR","artistsState","artists","error","loading","albumsState","albums","albulms_error","loading_albums","action","type","state","artists_list","payload","albums_error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,CAKE;AACA;AANF,OAQO,kBARP,C,CAUA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAOA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,aAAa,EAAE,IAFG;AAGlBC,EAAAA,cAAc,EAAE;AAHE,CAApB;;AAMA,MAAMN,OAAO,GAAG,CAACD,YAAD,EAAeQ,MAAf,KAA0B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLQ,QAAAA,YAAY,EAAEH,MAAM,CAACI;AAHhB,OAAP;;AAMF,SAAKd,aAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELR,QAAAA,KAAK,EAAEM,MAAM,CAACI;AAFT,OAAP;;AAKF;AACE,aAAOF,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,MAAML,MAAM,GAAG,CAACD,WAAD,EAAcI,MAAd,KAAyB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,cAAc,EAAE,KAFX;AAGLF,QAAAA,MAAM,EAAEG,MAAM,CAACI;AAHV,OAAP;;AAMF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,YAAY,EAAEL,MAAM,CAACI;AAFhB,OAAP;;AAKF;AACE,aAAOF,KAAP;AAfJ;AAiBD,CAlBD;;AAqBA,eAAef,eAAe,CAAC;AAC7BM,EAAAA,OAD6B;AAE7BI,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport {\n  SEARCH_ARTISTS,\n  SEARCH_ALBUMS,\n  ARTISTS_ERROR,\n  ALBUMS_ERROR,\n  //LOADING_ARTISTS,\n  //LOADING_ALBUMS\n\n} from '../actions/types';\n\n// Initial state\nconst artistsState = {\n  artists: [],\n  error: null,\n  loading: true\n};\n\n\n// Initial state\nconst albumsState = {\n  albums: [],\n  albulms_error: null,\n  loading_albums: true\n};\n\nconst artists = (artistsState, action) => {\n  switch (action.type) {\n    case SEARCH_ARTISTS:\n      return {\n        ...state,\n        loading: false,\n        artists_list: action.payload\n      };\n\n    case ARTISTS_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst albums = (albumsState, action) => {\n  switch (action.type) {\n    case SEARCH_ALBUMS:\n      return {\n        ...state,\n        loading_albums: false,\n        albums: action.payload\n      };\n\n    case ALBUMS_ERROR:\n      return {\n        ...state,\n        albums_error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  artists,\n  albums\n});\n\n\n"]},"metadata":{},"sourceType":"module"}